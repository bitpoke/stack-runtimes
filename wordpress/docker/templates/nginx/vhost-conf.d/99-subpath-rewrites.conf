# vim: set ft=nginx:
{{- $routes := splitList "," (default "" .Env.STACK_ROUTES) -}}
{{- $wpContent := trimAll "/" (trimPrefix (default "/app/web" .Env.DOCUMENT_ROOT) (default "/app/web/wp-content" .Env.WP_CONTENT_DIR)) -}}
{{- $wp := trimAll "/" (default "wp" .Env.WP_CORE_DIRECTORY) }}
{{- $generateMultisiteSubfolderRules := eq "subfolder" (default "off" .Env.STACK_MULTISITE_RULES | lower) }}

{{- define "rewrite" -}}
{{- /* $pathPrefix contains the normalized pathPrefix, containing trailing and leading slashes */ -}}
{{- $pathPrefix := empty (trimAll "/" .url.path) | ternary "/" (printf "/%s/" (trimAll "/" .url.path)) -}}

{{- if .multisiteSubfolder }}
if ( $http_host = "{{ .url.host }}" ) {
    rewrite ^{{ $pathPrefix }}([_0-9a-zA-Z-]+)(/{{ .wpContent }}/.*) $2 last;
    rewrite ^{{ $pathPrefix }}([_0-9a-zA-Z-]+)/((wp-includes|wp-admin|wp-content)/.*) /{{ .wp }}/$2 last;
    rewrite ^{{ $pathPrefix }}([_0-9a-zA-Z-]+)/([^/]+\.php)$ /{{ .wp }}/$2 last;
}
{{- end }}

{{- /* we only generate rewrite rules if the path is not root */ -}}
{{- if (ne "/" $pathPrefix) }}
if ( $http_host = "{{ .url.host }}" ) {
    rewrite ^{{ $pathPrefix }}({{ .wpContent }}/.*) /$1 last;
    rewrite ^{{ $pathPrefix }}{{ .wp }}/((wp-includes|wp-admin|wp-content)/.*) /{{ .wp }}/$1 last;
    rewrite ^{{ $pathPrefix }}{{ .wp }}/([^/]+\.php)$ /{{ .wp }}/$1 last;
}
{{- end }}
{{- end }}

# add /wp-admin trailing slash
rewrite ^[^\s]*/wp-admin$ $scheme://$host$uri/ permanent;
{{ range $route := $routes }}
# routing for {{ $route }}
{{ template "rewrite" (dict "url" (urlParse (printf "http://%s" $route)) "wp" $wp "wpContent" $wpContent "multisiteSubfolder" $generateMultisiteSubfolderRules) }}
{{ end }}
