# vim: set ft=nginx:

{{- if or (hasPrefix "gs://" (default "" .Env.STACK_MEDIA_BUCKET)) (hasPrefix "gcs://" (default "" .Env.STACK_MEDIA_BUCKET)) }}
{{- $gcs_bucket := default "" .Env.STACK_MEDIA_BUCKET | trimPrefix "gs://"  | trimPrefix "gcs://" | clean | trimAll "/" }}

location ^~ /.internal/google-cloud {
    location = /.internal/google-cloud/oauth2/v4/token {
        internal;
        proxy_pass                  https://www.googleapis.com/oauth2/v4/token;
        proxy_http_version          1.1;
        proxy_set_header            Host www.googleapis.com;
        proxy_set_header            Content-Type application/x-www-form-urlencoded;
        proxy_pass_request_headers  off;
    }

    location ^~ /.internal/google-cloud/metadata/ {
        internal;
        proxy_pass                  http://169.254.169.254/;
        proxy_http_version          1.1;
        proxy_set_header            Host metadata.google.internal;
        proxy_set_header            Metadata-Flavor Google;
        proxy_pass_request_headers  off;
    }

    location /.internal/google-cloud {
        return 404;
    }
}

location ^~ {{ default "/media" .Env.STACK_MEDIA_PATH }} {
    location ~ /$ {
        return 404;
    }

    location {{ default "/media" .Env.STACK_MEDIA_PATH }} {
        set $gcs_access_token '';
        access_by_lua_block {
            local gcs = require "bitpoke.gcs"
            gcs.setup()
        }

        header_filter_by_lua_block {
            local mime = require "bitpoke.mime-types"
            mime.setup()
        }

        proxy_pass              "https://storage.googleapis.com/{{ $gcs_bucket }}$uri";
        proxy_http_version      1.1;
        proxy_intercept_errors  on;

        proxy_set_header        Host storage.googleapis.com;
        proxy_set_header        Connection "";
        proxy_set_header        Authorization "Bearer $gcs_access_token";

        proxy_hide_header       alt-svc;
        proxy_hide_header       X-GUploader-UploadID;
        proxy_hide_header       alternate-protocol;
        proxy_hide_header       x-goog-hash;
        proxy_hide_header       x-goog-generation;
        proxy_hide_header       x-goog-metageneration;
        proxy_hide_header       x-goog-stored-content-encoding;
        proxy_hide_header       x-goog-stored-content-length;
        proxy_hide_header       x-goog-storage-class;
        proxy_hide_header       x-xss-protection;
        proxy_hide_header       accept-ranges;
        proxy_hide_header       Set-Cookie;
        proxy_ignore_headers    Set-Cookie;

        proxy_hide_header       cache-control; # let nginx manage cache control
        expires 1y;
    }
}
{{- end }}
